- Create a new test (function) - test_main_class
- The first test should be based on the working set of data that we will be using in the problem.
- Test have to fail (because you don't have an implementation)
- Create a new system functionality - main_class
- Test should pass
- Write next test

Framework
Minitest is a framework included with Ruby 1.9, and allows both xUnit and RSpec style tests

How to install

gem install minitest

How to use

require "minitest/autorun"
require_relative "main.rb" # use relative because is in the same folder

class ClassName < Minitest::Test

Example

def test_numbers
counter = using_arrays()
assert_equal(100, counter.count)

end

def test_number_15
results = using_arrays()
assert_equal("Mined Minds",results[14])
end

def test_number_3
results = using_arrays()
assert_equal("Mined", results[2])
end

def test_number_5
results = using_arrays()
assert_equal("Minds", results[4])
end

def test_number_101
results = using_arrays()
assert_nil(nil, results[100])
end

end
